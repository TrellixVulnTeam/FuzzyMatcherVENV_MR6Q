{"name": "test_columns", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataFrame' object has no attribute 'validate'", "trace": "df =       Account_Num                                      Provider Name  ... Average Total Payments Average Medicare Paym...TT & WHITE MEDICAL CENTER - MARBLE F...  ...                4650.44                   3500.67\n\n[2697 rows x 10 columns]\n\n    @pytest.mark.mandatory\n    def test_columns(df):\n>       df.validate(df.columns,{'Account_Num','Facility Name','Address','City','State','ZIP Code','County Name','Phone Number','Hospital Type','Hospital Ownership'})\n\ncsvfilecheck.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself =       Account_Num                                      Provider Name  ... Average Total Payments Average Medicare Paym...TT & WHITE MEDICAL CENTER - MARBLE F...  ...                4650.44                   3500.67\n\n[2697 rows x 10 columns]\nname = 'validate'\n\n    def __getattr__(self, name: str):\n        \"\"\"\n        After regular attribute access, try looking up the name\n        This allows simpler access to columns for interactive use.\n        \"\"\"\n        # Note: obj.x will always call obj.__getattribute__('x') prior to\n        # calling obj.__getattr__('x').\n        if (\n            name not in self._internal_names_set\n            and name not in self._metadata\n            and name not in self._accessors\n            and self._info_axis._can_hold_identifiers_and_holds_name(name)\n        ):\n            return self[name]\n>       return object.__getattribute__(self, name)\nE       AttributeError: 'DataFrame' object has no attribute 'validate'\n\n..\\lib\\site-packages\\pandas\\core\\generic.py:5487: AttributeError"}, "start": 1630684410199, "stop": 1630684410202, "uuid": "4ada5900-aced-45b1-ace0-a875f84aae12", "historyId": "2601d91b93d212a89d829904bdbe191b", "testCaseId": "56193b6b6c9a0340949f1a89b5158a2e", "fullName": "csvfilecheck#test_columns", "labels": [{"name": "tag", "value": "mandatory"}, {"name": "suite", "value": "csvfilecheck"}, {"name": "host", "value": "DOA-DOIT-CONSL1"}, {"name": "thread", "value": "18884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "csvfilecheck"}]}
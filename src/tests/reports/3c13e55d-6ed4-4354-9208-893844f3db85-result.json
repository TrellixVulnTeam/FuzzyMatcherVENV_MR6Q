{"name": "test_columns", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataFrame' object has no attribute 'validate'", "trace": "df =       Account_Num                                      Provider Name  ... Average Total Payments Average Medicare Paym...TT & WHITE MEDICAL CENTER - MARBLE F...  ...                4650.44                   3500.67\n\n[2697 rows x 10 columns]\n\n    @allure.step(\"Validate the columns\")\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.mandatory\n    def test_columns(df):\n>       df.validate(df.columns,{'Account_Num','Facility Name','Address','City','State','ZIP Code','County Name','Phone Number','Hospital Type','Hospital Ownership'})\n\ncsvfilecheck.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself =       Account_Num                                      Provider Name  ... Average Total Payments Average Medicare Paym...TT & WHITE MEDICAL CENTER - MARBLE F...  ...                4650.44                   3500.67\n\n[2697 rows x 10 columns]\nname = 'validate'\n\n    def __getattr__(self, name: str):\n        \"\"\"\n        After regular attribute access, try looking up the name\n        This allows simpler access to columns for interactive use.\n        \"\"\"\n        # Note: obj.x will always call obj.__getattribute__('x') prior to\n        # calling obj.__getattr__('x').\n        if (\n            name not in self._internal_names_set\n            and name not in self._metadata\n            and name not in self._accessors\n            and self._info_axis._can_hold_identifiers_and_holds_name(name)\n        ):\n            return self[name]\n>       return object.__getattribute__(self, name)\nE       AttributeError: 'DataFrame' object has no attribute 'validate'\n\n..\\lib\\site-packages\\pandas\\core\\generic.py:5487: AttributeError"}, "steps": [{"name": "Validate the columns", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataFrame' object has no attribute 'validate'\n", "trace": "  File \"C:\\Work_Imp\\DataScience\\FuzzyMatcherVENV\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Work_Imp\\DataScience\\FuzzyMatcherVENV\\tests\\csvfilecheck.py\", line 24, in test_columns\n    df.validate(df.columns,{'Account_Num','Facility Name','Address','City','State','ZIP Code','County Name','Phone Number','Hospital Type','Hospital Ownership'})\n  File \"C:\\Work_Imp\\DataScience\\FuzzyMatcherVENV\\lib\\site-packages\\pandas\\core\\generic.py\", line 5487, in __getattr__\n    return object.__getattribute__(self, name)\n"}, "parameters": [{"name": "df", "value": "      Account_Num  ... Average Medicare Payments\n0          839987  ...                   4115.52\n1          519118  ...                   4490.93\n2          733073  ...                   4021.79\n3          201752  ...                   4284.17\n4          678488  ...                   4819.53\n...           ...  ...                       ...\n2692       403227  ...                   3927.62\n2693       797810  ...                   4423.52\n2694       611900  ...                   4497.16\n2695       693781  ...                   4531.37\n2696       322584  ...                   3500.67\n\n[2697 rows x 10 columns]"}], "start": 1630685211260, "stop": 1630685211260}], "start": 1630685211247, "stop": 1630685211264, "uuid": "27646f36-8ea1-47c2-a78d-8cd0ed7afe3e", "historyId": "2601d91b93d212a89d829904bdbe191b", "testCaseId": "56193b6b6c9a0340949f1a89b5158a2e", "fullName": "csvfilecheck#test_columns", "labels": [{"name": "severity", "value": "minor"}, {"name": "tag", "value": "mandatory"}, {"name": "suite", "value": "csvfilecheck"}, {"name": "host", "value": "DOA-DOIT-CONSL1"}, {"name": "thread", "value": "21440-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "csvfilecheck"}]}
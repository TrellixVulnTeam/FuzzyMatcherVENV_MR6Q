{"name": "test_columns", "status": "failed", "statusDetails": {"message": "datatest.ValidationError: does not satisfy set membership (18 differences): [\n    Missing('Address'),\n    Extra('Average Covered Charges'),\n    Extra('Average Medicare Payments'),\n    Extra('Average Total Payments'),\n    Missing('City'),\n    Missing('County Name'),\n    Missing('Facility Name'),\n    Missing('Hospital Ownership'),\n    ...\n\n...Full output truncated, use '-vv' to show", "trace": "df =       Account_Num                                      Provider Name  ... Average Total Payments Average Medicare Paym...TT & WHITE MEDICAL CENTER - MARBLE F...  ...                4650.44                   3500.67\n\n[2697 rows x 10 columns]\n\n    @allure.step(\"Validate the columns\")\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.mandatory\n    def test_columns(df):\n>       dt.validate(df.columns,{'Account_Num','Facility Name','Address','City','State','ZIP Code','County Name','Phone Number','Hospital Type','Hospital Ownership'})\nE       datatest.ValidationError: does not satisfy set membership (18 differences): [\nE           Missing('Address'),\nE           Extra('Average Covered Charges'),\nE           Extra('Average Medicare Payments'),\nE           Extra('Average Total Payments'),\nE           Missing('City'),\nE           Missing('County Name'),\nE           Missing('Facility Name'),\nE           Missing('Hospital Ownership'),\nE           ...\nE       \nE       ...Full output truncated, use '-vv' to show\n\ncsvfilecheck.py:24: ValidationError"}, "steps": [{"name": "Validate the columns", "status": "failed", "statusDetails": {"message": "datatest.ValidationError: does not satisfy set membership (18 differences): [\n    Missing('Address'),\n    Extra('Average Covered Charges'),\n    Extra('Average Medicare Payments'),\n    Extra('Average Total Payments'),\n    Missing('City'),\n    Missing('County Name'),\n    Missing('Facility Name'),\n    Missing('Hospital Ownership'),\n    Missing('Hospital Type'),\n    Missing('Phone Number'),\n    Extra('Provider City'),\n    Extra('Provider Name'),\n    Extra('Provider State'),\n    Extra('Provider Street Address'),\n    Extra('Provider Zip Code'),\n    Missing('State'),\n    Extra('Total Discharges'),\n    Missing('ZIP Code'),\n]\n", "trace": "  File \"C:\\Work_Imp\\DataScience\\FuzzyMatcherVENV\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Work_Imp\\DataScience\\FuzzyMatcherVENV\\tests\\csvfilecheck.py\", line 24, in test_columns\n    dt.validate(df.columns,{'Account_Num','Facility Name','Address','City','State','ZIP Code','County Name','Phone Number','Hospital Type','Hospital Ownership'})\n  File \"c:\\work_imp\\datascience\\fuzzymatchervenv\\lib\\site-packages\\datatest\\validation.py\", line 296, in __call__\n    raise err\n"}, "parameters": [{"name": "df", "value": "      Account_Num  ... Average Medicare Payments\n0          839987  ...                   4115.52\n1          519118  ...                   4490.93\n2          733073  ...                   4021.79\n3          201752  ...                   4284.17\n4          678488  ...                   4819.53\n...           ...  ...                       ...\n2692       403227  ...                   3927.62\n2693       797810  ...                   4423.52\n2694       611900  ...                   4497.16\n2695       693781  ...                   4531.37\n2696       322584  ...                   3500.67\n\n[2697 rows x 10 columns]"}], "start": 1630685622357, "stop": 1630685622357}], "start": 1630685622345, "stop": 1630685622359, "uuid": "c014d18a-00e8-4ccd-8542-080f2650cc9c", "historyId": "2601d91b93d212a89d829904bdbe191b", "testCaseId": "56193b6b6c9a0340949f1a89b5158a2e", "fullName": "csvfilecheck#test_columns", "labels": [{"name": "severity", "value": "minor"}, {"name": "tag", "value": "mandatory"}, {"name": "suite", "value": "csvfilecheck"}, {"name": "host", "value": "DOA-DOIT-CONSL1"}, {"name": "thread", "value": "8444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "csvfilecheck"}]}